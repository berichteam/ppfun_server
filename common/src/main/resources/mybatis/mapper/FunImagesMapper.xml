<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pipi.common.persistence.mapper.FunImagesMapper">
    <resultMap id="BaseResultMap" type="com.pipi.common.domain.FunImages">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="fun_id" property="funId" jdbcType="BIGINT"/>
        <result column="attachment_id" property="attachmentId" jdbcType="BIGINT"/>
        <result column="image_url" property="imageUrl" jdbcType="VARCHAR"/>
        <result column="authority" property="authority" jdbcType="INTEGER"/>
        <result column="blur" property="blur" jdbcType="INTEGER"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from fun_images
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.pipi.common.domain.FunImages">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into fun_images (fun_id,attachment_id, image_url, authority,
        blur, description, created_at,
        updated_at)
        values (#{funId,jdbcType=BIGINT},#{attachmentId,jdbcType=BIGINT},
        #{imageUrl,jdbcType=VARCHAR},#{authority,jdbcType=INTEGER},
        #{blur,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP},
        #{updatedAt,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.pipi.common.domain.FunImages">
    update fun_images
    set fun_id = #{funId,jdbcType=BIGINT},
      attachment_id = #{attachmentId,jdbcType=BIGINT},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      authority = #{authority,jdbcType=INTEGER},
      blur = #{blur,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select id, fun_id,attachment_id, image_url,authority, blur, description, created_at, updated_at
    from fun_images
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, fun_id,attachment_id, image_url,authority, blur, description, created_at, updated_at
    from fun_images
  </select>

    <select id="selectAllByFunId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, fun_id,attachment_id, image_url,authority, blur, description, created_at, updated_at
    from fun_images
    where fun_id=#{funId,jdbcType=BIGINT}
  </select>
</mapper>